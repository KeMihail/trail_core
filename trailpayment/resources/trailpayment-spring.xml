<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean name="trailMockupCommandFactory"
		class="de.hybris.platform.payment.commands.factory.impl.DefaultCommandFactoryImpl">

		<property name="paymentProvider" value="Trail_Mockup" />
		<property name="commands">
			<map>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.IsApplicableCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.IsApplicableMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.AuthorizationCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.AuthorizationMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.SubscriptionAuthorizationCommand
						</value>
					</key>

					<bean
						class="de.hybris.training.commands.impl.SubscriptionAuthorizationMockCommand" />

					<!-- <bean class="de.hybris.platform.payment.commands.impl.SubscriptionAuthorizationMockCommand" 
						/> -->
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.CaptureCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.CaptureMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.PartialCaptureCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.PartialCaptureMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.EnrollmentCheckCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.EnrollmentCheckMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.VoidCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.VoidMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.FollowOnRefundCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.FollowOnRefundMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.StandaloneRefundCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.StandaloneRefundMockCommand" />
				</entry>

				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.CreateSubscriptionCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.CreateSubscriptionMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.DeleteSubscriptionCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.DeleteSubscriptionMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.GetSubscriptionDataCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.GetSubscriptionDataMockCommand" />
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">de.hybris.platform.payment.commands.UpdateSubscriptionCommand
						</value>
					</key>
					<bean
						class="de.hybris.platform.payment.commands.impl.UpdateSubscriptionMockCommand" />
				</entry>
			</map>
		</property>
	</bean>

	<bean name="mockupCommandFactoryRegistry"
		class="de.hybris.platform.payment.commands.impl.CommandFactoryRegistryMockImpl" />

	<bean id="trailpaymentSystemSetup"
		class="de.hybris.training.setup.TrailpaymentSystemSetup">
		<!-- constructor arg injection example -->
		<constructor-arg ref="trailpaymentService" />
	</bean>

	<bean id="trailpaymentService"
		class="de.hybris.training.service.impl.DefaultTrailpaymentService">
		<!-- setter injection example -->
		<property name="modelService" ref="modelService" />
		<property name="mediaService" ref="mediaService" />
		<property name="flexibleSearchService"
			ref="flexibleSearchService" />
	</bean>

	<bean name="commandFactoryRegistryMockTrailImpl"
		class="de.hybris.training.commands.impl.CommandFactoryRegistryMockTrailImpl" />

</beans>
